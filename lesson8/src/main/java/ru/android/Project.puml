@startuml

package "participant" {
    interface Participant {
        +{abstract}passObstacles(Obstacle[] obstacles): void
        +{abstract}checkDistance(distance: int): boolean
        +{abstract}checkHeight(height: int): boolean
        +{abstract}run(distance: int): void
        +{abstract}jump(height: int): void
    }

    class Cat {
        -name: String
        -runningRestriction: int
        -jumpingRestriction: int
        ---
        +Cat(name: String, runningRestriction: int, jumpingRestriction: int)
        +toString(): String {override}
        +passObstacles(obstacles: Obstacle[]): void {override}
        +run(distance: int): void {override}
        +jump(height: int): void {override}
        +checkDistance(distance: int): boolean
        +checkHeight(height: int): boolean
    }

    class Human {
        -name: String
        -runningRestriction: int
        -jumpingRestriction: int
        ---
        +Human(name: String, runningRestriction: int, jumpingRestriction: int)
        +toString(): String {override}
        +passObstacles(obstacles: Obstacle[]): void {override}
        +run(distance: int): void {override}
        +jump(height: int): void {override}
        +checkDistance(distance: int): boolean
        +checkHeight(height: int): boolean
    }

    class Robot {
        -name: String
        -runningRestriction: int
        -jumpingRestriction: int
        ---
        +Robot(name: String, runningRestriction: int, jumpingRestriction: int)
        +toString(): String {override}
        +passObstacles(obstacles: Obstacle[]): void {override}
        +run(distance: int): void {override}
        +jump(height: int): void {override}
        +checkDistance(distance: int): boolean
        +checkHeight(height: int): boolean
    }

    Participant <|-- Cat
    Participant <|-- Human
    Participant <|-- Robot
}

package "obstacle" {
    interface Obstacle {
        +{abstract}info(): void
    }

    class Treadmill {
        -distance: int
        ---
        +getDistance(): int
        +info(): void {override}
        +toString(): String {override}
    }

    class Wall {
        -height: int
        ---
        +getHeight(): int
        +info(): void {override}
        +toString(): String {override}
    }

    Obstacle <|.. Treadmill
    Obstacle <|.. Wall
}

package "factories" {
    enum ObstacleType {
        TREADMILL, WALL
    }

    enum ParticipantType {
        HUMAN, CAT, ROBOT
    }

    class ObstacleFactory {
        +getObstacle(obstacleType: ObstacleType, length: int): Obstacle
    }

    class ParticipantFactory {
        +getParticipant(participant: Participant, name: String, runningRestriction: int, jumpingRestriction: int): Participant
    }

    ObstacleFactory o.. Obstacle
    ParticipantFactory o.. Participant
}

class Main {
    +{static}main(args: String[]): void
    -{static}printParticipantsInfo(participant: Participant[]): void
    -{static}printObstaclesInfo(obstacle: Obstacle[]): void
    -{static}runChallenge(participant: Participant[], obstacle: Obstacle[]): void
}

Main -- ObstacleFactory
Main -- ParticipantFactory

@enduml
